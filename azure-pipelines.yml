# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'ae37f28e-08bd-4279-bdf2-2c10738f9844'

  # Web app name
  webAppName: 'SupportServicesTest'

  # Environment name
  environmentName: 'SupportServicesTest'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
      - task: JenkinsQueueJob@1
        displayName: 'Queue Jenkins Job: SupportServices'
        inputs:
          serverEndpoint: Jenkins
          jobName: SupportServices
        condition: succeededOrFailed()

      - task: JenkinsDownloadArtifacts@1
        displayName: 'Download artifacts produced by SupportServices'
        inputs:
          jenkinsServerConnection: '$(Parameters.serverEndpoint)'
          jobName: '$(Parameters.jobName)'
          saveTo: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'
        inputs:
          PathtoPublish: '$(build.artifactstagingdirectory)'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: SupportServicesTest'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|10.10'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run server'